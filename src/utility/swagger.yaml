openapi: 3.0.0
info:
  title: "Your API Title"
  version: "1.0.0"
  description: "Description of your API"
paths:
  /api/create-shop-owner:
    post:
      summary: Create a new shop owner
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShopOwnerBodyType"
      responses:
        "200":
          description: Shop owner created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShopOwnerResponse"
        "403":
          description: Pin is not same
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/login:
    post:
      summary: Log in as a shop owner
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginBodyType"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShopOwnerResponse"
        "404":
          description: Shop owner not found or pin not matched
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/product:
    post:
      summary: Create a new product
      tags:
        - Product
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT token of the shop owner
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "201":
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Get all products
      tags:
        - Product
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT token of the shop owner
      responses:
        "200":
          description: All products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductsResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/product/{id}:
    get:
      summary: Get a single product by ID
      tags:
        - Product
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the product to get
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT token of the shop owner
      responses:
        "200":
          description: Product found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update a product by ID
      tags:
        - Product
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the product to update
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT token of the shop owner
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete a product by ID
      tags:
        - Product
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the product to delete
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT token of the shop owner
      responses:
        "200":
          description: Product deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    ShopOwnerBodyType:
      type: object
      properties:
        shopName:
          type: string
        mobile:
          type: string
        pincode:
          type: string
        confirmPincode:
          type: string
      required:
        - shopName
        - mobile
        - pincode
        - confirmPincode
    LoginBodyType:
      type: object
      properties:
        mobile:
          type: string
        pincode:
          type: string
      required:
        - mobile
        - pincode
    ShopOwnerResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        shopOwner:
          type: object
          properties:
            id:
              type: string
            mobile:
              type: string
            shopName:
              type: string
    Product:
      type: object
      properties:
        productName:
          type: string
        amount:
          type: number
        buyingPrice:
          type: number
        sellingPrice:
          type: number
        productCategory:
          type: string
        productBrand:
          type: string
        unit:
          type: string
        shopOwnerId:
          type: string
      required:
        - productName
        - amount
        - buyingPrice
        - sellingPrice
        - productCategory
        - productBrand
        - unit
        - shopOwnerId
    ProductResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        product:
          $ref: "#/components/schemas/Product"
    ProductsResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product"
    Error:
      type: object
      properties:
        success:
          type: boolean
        errors:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              value:
                type: string
              msg:
                type: string
              path:
                type: string
              location:
                type: string
